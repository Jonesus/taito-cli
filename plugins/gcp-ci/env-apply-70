#!/bin/bash -e
: "${taito_zone:?}"
: "${taito_vc_repository:?}"
: "${taito_project:?}"

taito::confirm "Add a build trigger for ${taito_project} in ${taito_zone}" || \
  taito::skip_to_next "${@}"

# TODO: Use Terraform to create the trigger (requires version control auth)
# TODO: Support for Google Cloud Build GitHub App (currently in beta)
# --> Does not provide original source repository information in build history
echo
echo "--------------------------------"
echo "Basic configuration"
echo "--------------------------------"
echo
echo "Connect to repository with these settings if not already connected:"
echo "- Source: ${taito_vc_provider:-GitHub} (mirrored)"
if [[ "${taito_vc_provider:-github}" == "github" ]]; then
  echo "    WARNING: Do NOT select GitHub Cloud Build GitHub App (Beta) !!!"
fi
echo "- Repository: ${taito_vc_repository}"
echo
echo "Create a new build trigger for the repository with these settings if one"
echo "does not exist already:"
echo "- Name: ${taito_project}"
echo "- Event: Push to branch"
echo "- Source repository: ${taito_vc_repository}"
echo "- Source branch - Most likely one of these depending on zone:"
echo "    ^(dev|test|uat)\$"
echo "    ^(stag|canary|master)\$"
echo "- File type: Cloud Build configuration file (YAML or JSON)"
echo "- Cloud Build configuration file location: /cloudbuild.yaml"
echo
echo "--------------------------------"
echo "OPTIONAL: Advanced configuration"
echo "--------------------------------"
echo
echo "Note that these steps are optional!"
echo
echo "a) Protect staging, canary, and production branches"
echo
echo "   Use branch protection features of the version control provider (${taito_vc_provider:-GitHub})"
echo "   to limit push access to staging (stag), canary (canary), and production"
echo "   (master) branches."
echo
echo "b) Deploy manually to staging, canary, and production environments"
echo
echo "   Set trigger status to 'disabled' after you have created to build"
echo "   trigger for stag/canary/master branches."
echo
echo "c) Phases: Build automatically, deploy manually"
echo
echo "   Create a separate trigger for the deploy phase:"
echo "   - Name: ${taito_project}-deploy"
echo "   - Substitution variables: _TAITO_CI_PHASES=deploy,test,release"
echo "   - Set all other settings as defined previously"
echo "   - Set 'status=disabled' after trigger creation (use manual triggering)"
echo
echo "   Modify the original trigger:"
echo "   - Substitution variables: _TAITO_CI_PHASES=build"
echo "   - Branch (regex): dev"
echo
echo "d) Execute CI/CD steps without Taito CLI"
echo
echo "   If you cannot use Taito CLI image on your CI/CD, see: https://taitounited.github.io/taito-cli/docs/06-continuous-integration-and-delivery#cicd-without-taito-cli"
echo
echo "Press enter to open build trigger management"
read -r

opts=""
if [[ ${google_authuser:-} ]]; then
  opts="authuser=${google_authuser}&"
fi

taito::open_browser \
  "https://console.cloud.google.com/cloud-build/triggers?${opts}project=${taito_zone}"

echo "Press enter when ready"
read -r

taito::call_next "${@}"
