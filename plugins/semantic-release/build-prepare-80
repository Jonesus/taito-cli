#!/bin/bash -e
: "${taito_target_env:?}"
: "${taito_branch:?}"
: "${taito_organization:?}"
: "${taito_vc_repository:?}"
: "${taito_project_path:?}"

if [[ ${taito_vc_provider:-} != "github" ]]; then
  echo "Currently only GitHub is supported. Skipping semantic release."
  taito::skip_to_next "${@}"
fi

if [[ ${taito_mode:-} == "ci" ]] && [[ ${ci_exec_release:-} != "true" ]]; then
  echo "ci_exec_release setting is disabled. Skipping semantic release."
  taito::skip_to_next "${@}"
fi

if [[ $secret_value_github_buildbot_token == "secret_file:"* ]]; then
  secret_value_github_buildbot_token="$(cat ${secret_value_github_buildbot_token#secret_file:})"
fi

if [[ ! ${secret_value_github_buildbot_token} ]]; then
  echo "WARN: GitHub token has not been set. Skipping semantic release."
  taito::skip_to_next "${@}"
fi

# Determine npm command based on environment
command=release-pre:${taito_target_env}

# Run the command only if it exists in package.json
commands=$(npm run | grep '^  [^ ]*$' | sed -e 's/ //g')
if [[ $(echo "${commands}" | grep "^${command}$") != "" ]]; then
  (
    echo "Preparing release"

    # TODO remove hardcoded github.com
    echo "- Cloning git repo to a separate release directory because builder"
    echo "workspace does not necessarily point to the original repository"
    taito::executing_start
    git clone "https://${secret_value_github_buildbot_token}@github.com/${taito_vc_organization:-$taito_organization}/${taito_vc_repository}.git" release
    cd "${taito_project_path}/release"
    git checkout ${taito_branch}

    # TODO avoid reading secrets to env vars before running npm install
    # TODO is git clone / npm install even necessary with the latest
    # semantic release?
    npm install

    echo "- Running npm script ${command}"
    NPM_TOKEN=none GH_TOKEN=${secret_value_github_buildbot_token} \
      npm run "${command}" > ./release-output || \
      (cat ./release-output && echo ERROR && exit 1)
    cat ./release-output

    echo "Parse version from semantic-release output"
    cat ./release-output | \
      grep "next release version" | \
      grep -o '[0-9]*\.[0-9]*\.[0-9]*' > ../taitoflag_version || \
      echo "Parsing failed. Probably old semantic-release version."

    # Support old semantic version (TODO remove support)
    if [[ ! $(cat ../taitoflag_version) ]]; then
      echo "Support for old semantic version (TODO remove support)"
      cat ./package.json | \
        grep -o 'version[": ]*[0-9]*\.[0-9]*\.[0-9]*' | \
        grep -o '[0-9]*\.[0-9]*\.[0-9]*' > ../taitoflag_version

      rm -f .npmrc
      echo "- Copying package.json that contains the new version number"
      rm -f "${taito_project_path}/package.json"
      yes | cp package.json "${taito_project_path}/package.json"
    fi

    echo "Version: $(cat ../taitoflag_version)"
  )
fi

taito::call_next "${@}"
