#!/bin/bash -e
# shellcheck source=lib/all.bash
. "${taito_plugin_path:?}/lib/all.bash"
: "${taito_target_env:?}"
: "${taito_branch:?}"
: "${taito_vc_repository_url:?}"
: "${taito_project_path:?}"

# Check ci_exec_release flag
if [[ ${taito_mode:-} == "ci" ]] && [[ ${ci_exec_release:-} != "true" ]]; then
  echo "ci_exec_release setting is disabled. Skipping semantic release."
  taito::skip_to_next "$@"
fi

# Check token exists
if [[ ! "$(semantic-release::get_token)" ]]; then
  echo "WARN: Skipping semantic release. Neither 'version-control-buildbot.token'"
  echo "secret nor VC_TOKEN environment variable has been set."
  taito::skip_to_next "$@"
fi

# Check package.json command exists
command="release-pre:${taito_target_env}"
commands=$(npm run | grep '^  [^ ]*$' | sed -e 's/ //g')
if [[ ! $(echo "${commands}" | grep "^${command}$") ]]; then
  taito::skip_to_next "$@"
fi

# Execute
(
  echo "Preparing release"

  echo "- Cloning git repo to a separate release directory because builder"
  echo "workspace does not necessarily point to the original repository"
  taito::executing_start
  git clone \
    "https://$(semantic-release::get_token)@${taito_vc_repository_url}.git" \
    release
  cd "${taito_project_path}/release"
  git checkout "${taito_branch}"

  npm install
  echo "- Running npm script ${command}"
  (
    semantic-release::export_tokens
    npm run "${command}" >./release-output ||
      (cat ./release-output && echo ERROR && exit 1)
  )
  cat ./release-output

  echo "Parse version from semantic-release output"
  cat ./release-output |
    grep "next release version" |
    grep -o '[0-9]*\.[0-9]*\.[0-9]*' >../taitoflag_version ||
    echo "WARNING: New version could not be determined"

  echo "Version: $(cat ../taitoflag_version)"
)

taito::call_next "$@"
