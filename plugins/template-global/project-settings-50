#!/bin/bash -e

if [[ ${taito_type:-} == "zone" ]]; then
  # Postgres
  postgres_instance="${postgres_default_name:-$postgres_default_instance}"
  postgres_host="${postgres_default_host:-}"
  postgres_host_prod="${postgres_default_host_prod:-}"
  postgres_admin="${postgres_default_admin:-}"
  postgres_username_suffix="${postgres_default_username_suffix:-}"
  postgres_port="${postgres_default_port:-5432}"
  postgres_port_prod="${postgres_default_port:-$postgres_port}"

  # TODO: remove these
  if [[ ! $postgres_instance ]]; then
    postgres_instance=$(echo "${postgres_instances:-}" | awk '{print $1;}')
  fi
  if [[ ! $postgres_host ]]; then
    postgres_host=$(echo "${postgres_hosts:-127.0.0.1}" | awk '{print $1;}')
  fi
  if [[ ! $postgres_host_prod ]]; then
    postgres_host_prod=$(echo "${postgres_hosts_prod:-$postgres_host}" | awk '{print $1;}')
  fi
  if [[ ! $postgres_admin ]]; then
    postgres_admin=$(echo "${postgres_admins:-}" | awk '{print $1;}')
  fi
  if [[ ! $postgres_username_suffix ]]; then
    postgres_username_suffix=$(echo "${postgres_username_suffixes:-}" | awk '{print $1;}')
  fi

  # MySQL
  mysql_instance="${mysql_default_name:-$mysql_default_instance}"
  mysql_host=${mysql_default_host:-}
  mysql_host_prod=${mysql_default_host_prod:-}
  mysql_admin=${mysql_default_admin:-}
  mysql_username_suffix="${mysql_default_username_suffix:-}"
  mysql_port="${mysql_default_port:-3306}"
  mysql_port_prod="${mysql_default_port:-$mysql_port}"

  # TODO: remove these
  if [[ ! $mysql_instance ]]; then
    mysql_instance=$(echo "${mysql_instances:-}" | awk '{print $1;}')
  fi
  if [[ ! $mysql_host ]]; then
    mysql_host=$(echo "${mysql_hosts:-127.0.0.1}" | awk '{print $1;}')
  fi
  if [[ ! $mysql_host_prod ]]; then
    mysql_host_prod=$(echo "${mysql_hosts_prod:-$mysql_host}" | awk '{print $1;}')
  fi
  if [[ ! $mysql_admin ]]; then
    mysql_admin=$(echo "${mysql_admins:-}" | awk '{print $1;}')
  fi
  if [[ ! $mysql_username_suffix ]]; then
    mysql_username_suffix=$(echo "${mysql_username_suffixes:-}" | awk '{print $1;}')
  fi

  storage_class=
  if [[ ${taito_provider:?} == "gcp" ]]; then
    storage_class=REGIONAL
  fi

  if [[ ${taito_quiet:-} != "true" ]]; then
    echo
    echo "Once you have configured the zone, you can create a new project on"
    echo "this zone like this:"
    echo
    echo "1) Configure your default config file (~/.taito/taito-config.sh) or"
    echo "   additional config file (~/.taito/taito-config-${taito_organization_abbr:-myorg}.sh)"
    echo "   according to the example settings displayed below."
    echo
    echo "Press enter to display the example settings"
    read -r
  fi
  echo
  echo "# --- Project template settings ---"
  echo "# (default settings for newly created projects)"
  echo
  echo "# Template: Taito CLI image"
  echo "# TIP: Pull taito image from private registry to keep CI/CD fast."
  if [[ $taito_provider != "linux" ]]; then
    echo "template_default_taito_image=taitounited/taito-cli:ci-$taito_provider"
  else
    echo "template_default_taito_image=taitounited/taito-cli:ci"
  fi
  echo "template_default_taito_image_username="
  echo "template_default_taito_image_password="
  echo "template_default_taito_image_email="
  echo
  echo "# Template: Labeling"
  echo "template_default_organization=$taito_organization"
  echo "template_default_organization_abbr=${taito_organization_abbr:-$taito_organization}"
  echo
  echo "# Template: Zone"
  echo "template_default_zone=$taito_zone"
  echo "template_default_zone_multi_tenant=$taito_zone_multi_tenant"
  echo
  echo "# Template: Domains and hosts"
  echo "template_default_domain=$taito_default_domain"
  echo "template_default_cdn_domain=$taito_default_cdn_domain"
  echo "template_default_bastion_public_ip=$taito_bastion_public_ip"
  if [[ $taito_provider == "linux" ]]; then
    echo "template_default_host=x.$taito_default_domain"
  else
    echo "template_default_host="
  fi
  echo
  echo "# Template: Project defaults"
  echo "template_default_environments=\"dev prod\""
  echo "template_default_alternatives=\"\""
  echo "template_default_engine="
  echo
  echo "# Template: Cloud provider"
  echo "template_default_provider=$taito_provider"
  echo "template_default_provider_org_id=$taito_provider_org_id"
  echo "template_default_provider_billing_account_id=$taito_provider_billing_account_id"
  echo "template_default_provider_region=$taito_provider_region"
  echo "template_default_provider_zone=$taito_provider_zone"
  echo
  if [[ ${taito_provider} == "aws" ]]; then
    echo "# Template: Network"
    echo "template_default_network_tags='${taito_network_tags}'"
    echo "template_default_function_subnet_tags='${taito_function_subnet_tags}'"
    echo "template_default_function_security_group_tags='${taito_function_security_group_tags}'"
    echo "template_default_cache_subnet_tags='${taito_cache_subnet_tags}'"
    echo "template_default_cache_security_group_tags='${taito_cache_security_group_tags}'"
    echo
    echo "# Template: Policies"
    echo "template_default_gateway_policies='${taito_gateway_policies}'"
    echo "template_default_cicd_policies='${taito_cicd_policies}'"
    echo
  fi
  echo "# Template: Secrets"
  echo "template_default_provider_secrets_location=$taito_provider_secrets_location"
  echo "template_default_cicd_secrets_path=$taito_cicd_secrets_path"
  echo
  echo "# Template: Version control provider"
  echo "template_default_vc_provider=$taito_vc_provider"
  echo "template_default_vc_organization=${taito_vc_organization:-$taito_organization}"
  echo "template_default_vc_url=$taito_vc_domain/${taito_vc_organization:-$taito_organization}"
  echo "template_default_zone_source_git=git@github.com:TaitoUnited/taito-templates//infrastructure"
  echo "template_default_source_git=git@github.com:TaitoUnited"
  echo "template_default_dest_git=git@$taito_vc_domain:${taito_vc_organization:-$taito_organization}"
  echo
  echo "# Template: CI/CD provider"
  echo "template_default_ci_provider=$taito_ci_provider"
  echo "template_default_ci_organization=${taito_ci_organization:-$taito_organization}"
  echo "template_default_ci_exec_deploy=true"
  if [[ $taito_container_registry == "local" ]]; then
    echo "template_default_container_registry_provider=local"
  else
    echo "template_default_container_registry_provider=$taito_container_registry_provider"
  fi
  echo "template_default_container_registry_provider_url=$taito_container_registry_provider_url"
  echo "template_default_container_registry_organization=$taito_container_registry_organization"
  echo "template_default_container_registry=$taito_container_registry"
  echo
  echo "# Template: Uptime provider"
  echo "template_default_uptime_provider="
  echo "template_default_uptime_provider_url="
  echo "template_default_uptime_provider_org_id="
  echo "template_default_uptime_channels="
  echo
  echo "# Template: Tracking provider"
  echo "template_default_tracking_provider="
  echo "template_default_tracking_provider_url="
  echo "template_default_tracking_organization="
  echo
  echo "# Template: Tracing provider"
  echo "template_default_tracing_provider=$taito_tracing_provider"
  echo "template_default_tracing_provider_url=$taito_tracing_provider_url"
  echo "template_default_tracing_organization=$taito_tracing_organization"
  echo
  echo "# Template: Kubernetes"
  echo "template_default_kubernetes=${kubernetes_name:-}"
  echo "template_default_kubernetes_regional=${kubernetes_regional:-false}"
  echo
  echo "# Template: Binary Authorization"
  echo "template_default_binauthz_attestor=${binauthz_attestor:-}"
  echo "template_default_binauthz_secret_name=${binauthz_secret_name:-}"
  echo "template_default_binauthz_public_key_id=${binauthz_public_key_id:-}"
  echo
  echo "# Template: Postgres"
  echo "template_default_postgres=${postgres_instance}"
  echo "template_default_postgres_host=\"${postgres_host}\""
  echo "template_default_postgres_port=\"${postgres_port}\""
  echo "template_default_postgres_master_username=${postgres_admin}"
  echo "template_default_postgres_master_password_hint=\"Hint where to get the password\""
  echo "template_default_postgres_username_suffix=${postgres_username_suffix}"
  echo "template_default_postgres_ssl_enabled=${postgres_ssl_enabled:-true}"
  echo "template_default_postgres_ssl_client_cert_enabled=${postgres_ssl_client_cert_enabled:-false}"
  echo "template_default_postgres_ssl_server_cert_enabled=${postgres_ssl_server_cert_enabled:-false}"
  echo "template_default_postgres_proxy_ssl_enabled=${postgres_proxy_ssl_enabled:-true}"
  echo
  echo "# Template: MySQL"
  echo "template_default_mysql=${mysql_instance}"
  echo "template_default_mysql_host=\"${mysql_host}\""
  echo "template_default_mysql_port=\"${mysql_port}\""
  echo "template_default_mysql_master_username=${mysql_admin}"
  echo "template_default_mysql_master_password_hint=\"Hint where to get the password\""
  echo "template_default_mysql_username_suffix=${mysql_username_suffix}"
  echo "template_default_mysql_ssl_enabled=${mysql_ssl_enabled:-true}"
  echo "template_default_mysql_ssl_client_cert_enabled=${mysql_ssl_client_cert_enabled:-false}"
  echo "template_default_mysql_ssl_server_cert_enabled=${mysql_ssl_server_cert_enabled:-false}"
  echo "template_default_mysql_proxy_ssl_enabled=${mysql_proxy_ssl_enabled:-true}"
  echo
  echo "# Template: Storage"
  echo "template_default_state_bucket=${taito_projects_bucket:-taito_resource_namespace_prefix_sha1sum}"
  echo "template_default_functions_bucket=${taito_projects_bucket:-taito_resource_namespace_prefix_sha1sum}"
  echo "template_default_public_bucket=$taito_public_bucket"
  echo "template_default_storage_class=$storage_class"
  echo "template_default_storage_location=$taito_provider_region"
  echo "template_default_storage_days=60"
  echo
  echo "# Template: Backups"
  echo "template_default_backup_location="
  echo "template_default_backup_days="
  echo
  echo "# Template: Production zone"
  echo "# TIP: If you want to deploy staging, canary, and production environments"
  echo "# to a different zone than feature, development, and testing environments,"
  echo "# configure alternative prod zone settings here."
  echo "template_default_zone_prod=$taito_zone"
  echo "template_default_zone_multi_tenant_prod=$taito_zone_multi_tenant"
  echo "template_default_domain_prod=${taito_default_domain_prod:-$taito_default_domain}"
  echo "template_default_cdn_domain_prod=${taito_default_cdn_domain_prod:-$taito_default_cdn_domain}"
  echo "template_default_bastion_public_ip_prod=${taito_bastion_public_ip_prod:-$taito_bastion_public_ip}"
  if [[ $taito_provider == "linux" ]]; then
    echo "template_default_host_prod=x.${taito_default_domain_prod:-$taito_default_domain}"
  else
    echo "template_default_host_prod="
  fi
  echo "template_default_resource_namespace_owners_prod=\"$taito_resource_namespace_owners\""
  echo "template_default_resource_namespace_editors_prod=\"$taito_resource_namespace_editors\""
  echo "template_default_resource_namespace_viewers_prod=\"$taito_resource_namespace_viewers\""
  echo "template_default_provider_prod=$taito_provider"
  echo "template_default_provider_org_id_prod=$taito_provider_org_id"
  echo "template_default_provider_billing_account_id_prod=$taito_provider_billing_account_id"
  echo "template_default_provider_region_prod=$taito_provider_region"
  echo "template_default_provider_zone_prod=$taito_provider_zone"

  if [[ ${taito_provider} == "aws" ]]; then
    echo "template_default_network_tags_prod='${taito_network_tags}'"
    echo "template_default_function_subnet_tags_prod='${taito_function_subnet_tags}'"
    echo "template_default_function_security_group_tags_prod='${taito_function_security_group_tags}'"
    echo "template_default_cache_subnet_tags_prod='${taito_cache_subnet_tags}'"
    echo "template_default_cache_security_group_tags_prod='${taito_cache_security_group_tags}'"
    echo "template_default_gateway_policies_prod='${taito_gateway_policies}'"
    echo "template_default_cicd_policies_prod='${taito_cicd_policies}'"
  fi

  echo "template_default_provider_secrets_location_prod=$taito_provider_secrets_location"
  echo "template_default_cicd_secrets_path_prod=$taito_cicd_secrets_path"
  echo "template_default_ci_provider_prod=$taito_ci_provider"
  echo "template_default_ci_organization_prod=${taito_ci_organization:-$taito_organization}"
  echo "template_default_ci_exec_deploy_prod=true # Set to 'false' for security critical environments"
  if [[ $taito_container_registry == "local" ]]; then
    echo "template_default_container_registry_provider_prod=local"
  else
    echo "template_default_container_registry_provider_prod=$taito_container_registry_provider"
  fi
  echo "template_default_container_registry_prod=$taito_container_registry"
  echo "template_default_container_registry_provider_url_prod=$taito_container_registry_provider_url"
  echo "template_default_container_registry_organization_prod=$taito_container_registry_organization"

  echo "template_default_uptime_provider_prod=$taito_uptime_provider"
  echo "template_default_uptime_provider_url_prod=$taito_uptime_provider_url"
  echo "template_default_uptime_provider_org_id_prod=$taito_uptime_provider_org_id"
  echo "template_default_uptime_channels_prod=$taito_messaging_uptime_channels"
  echo "template_default_tracking_provider_prod=$taito_tracking_provider"
  echo "template_default_tracking_provider_url_prod=$taito_tracking_provider_url"
  echo "template_default_tracking_organization_prod=$taito_tracking_organization"
  echo "template_default_tracing_provider_prod=$taito_tracing_provider"
  echo "template_default_tracing_provider_url_prod=$taito_tracing_provider_url"
  echo "template_default_tracing_organization_prod=$taito_tracing_organization"

  echo "template_default_kubernetes_prod=${kubernetes_name:-}"
  echo "template_default_kubernetes_regional_prod=${kubernetes_regional:-false}"
  echo "template_default_binauthz_attestor_prod=${binauthz_attestor:-}"
  echo "template_default_binauthz_secret_name_prod=${binauthz_secret_name:-}"
  echo "template_default_binauthz_public_key_id_prod=${binauthz_public_key_id:-}"

  echo "template_default_postgres_host_prod=\"${postgres_host_prod:-$postgres_host}\""
  echo "template_default_postgres_port_prod=\"${postgres_port_prod:-$postgres_port}\""
  echo "template_default_postgres_username_suffix_prod=${postgres_username_suffix}"
  echo "template_default_postgres_ssl_enabled_prod=${postgres_ssl_enabled:-true}"
  echo "template_default_postgres_ssl_client_cert_enabled_prod=${postgres_ssl_client_cert_enabled:-false}"
  echo "template_default_postgres_ssl_server_cert_enabled_prod=${postgres_ssl_server_cert_enabled:-false}"
  echo "template_default_postgres_proxy_ssl_enabled_prod=${postgres_ssl_enabled:-true}"
  echo "template_default_mysql_host_prod=\"${mysql_host_prod:-$mysql_host}\""
  echo "template_default_mysql_port_prod=\"${mysql_port_prod:-$mysql_port}\""
  echo "template_default_mysql_username_suffix_prod=${mysql_username_suffix}"
  echo "template_default_mysql_ssl_enabled_prod=${mysql_ssl_enabled:-true}"
  echo "template_default_mysql_ssl_client_cert_enabled_prod=${mysql_ssl_client_cert_enabled:-false}"
  echo "template_default_mysql_ssl_server_cert_enabled_prod=${mysql_ssl_server_cert_enabled:-false}"
  echo "template_default_mysql_proxy_ssl_enabled_prod=${mysql_ssl_enabled:-true}"
  echo "template_default_state_bucket_prod=${taito_projects_bucket:-taito_resource_namespace_prefix_sha1sum}"
  echo "template_default_functions_bucket_prod=${taito_projects_bucket:-taito_resource_namespace_prefix_sha1sum}"
  echo "template_default_public_bucket_prod=$taito_public_bucket"
  echo "template_default_storage_class_prod=$storage_class"
  echo "template_default_storage_location_prod=$taito_provider_region"
  echo "template_default_storage_days_prod=60"
  echo "template_default_backup_location_prod=$taito_provider_region"
  echo "template_default_backup_days_prod=60"

  echo
  echo "# ------------------------------------------------------------------"
  echo
  if [[ ${taito_quiet:-} != "true" ]]; then
    echo "2) Create a new project based on full-stack-template by running"
    echo "   'taito [-o ${taito_organization_abbr:-myorg}] project create full-stack-template'"
    echo
  fi
fi

taito::call_next "${@}"
