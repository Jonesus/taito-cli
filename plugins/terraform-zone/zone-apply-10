#!/bin/bash -e
# shellcheck source=../terraform/lib/all.bash
. "${taito_plugin_path:?}/../terraform/lib/all.bash"

taito::confirm "Apply changes by running terraform scripts" || \
  taito::skip_to_next "${@}"

(
  set -e
  if [[ -f "./terraform/terraform.tfstate" ]]; then
    echo
    echo "Your Terraform state is currently located on local disk. You should"
    echo "configure remote backend in ./terraform/main.tf before continuing."
    echo "If you already have configured the remote state, you can delete"
    echo "./terraform/terraform.tfstate and ./terraform/terraform.tfstate.backup"
    echo "from your local disk once the state has been transferred to a remote"
    echo "backend."
    echo
    echo "Press enter to continue."
    read -r
  fi

  terraform::run_zone apply

  # echo
  # if [[ ${taito_provider:-} == "azure" ]] &&
  #    taito::confirm "Configure database firewall for Kubernetes access"
  # then
  #   taito::print_title "CONFIGURE DATABASE FIREWALL"
  #   echo
  #   echo "Terraform azurerm_sql_firewall_rule resource is broken at the moment."
  #   echo "You need to manually add the following IP addresses to the database firewall"
  #   echo "rules on Azure web console: database -> connection security -> firewall rules."
  #   echo
  #   (
  #     cd terraform &> /dev/null || :
  #     terraform output kubernetes_lb_ip_address || :
  #   )
  #   dashboard_link="$(taito -q ${taito_options:-} link-dashboard | grep -v '^\s*$' || :)"
  #   databases_link="$(taito -q ${taito_options:-} link-databases | grep -v '^\s*$' || :)"
  #   if [[ ${databases_link} ]] || [[ ${dashboard_link} ]]; then
  #     echo "Press enter to open the web console at:"
  #     echo "${databases_link:-$dashboard_link}"
  #     read -r
  #     taito::open_browser "${databases_link:-$dashboard_link}"
  #   fi
  #   echo "Press enter once the database firewalls has been configured."
  #   echo "TIP: Do not forget to press the 'save' button on web console!"
  #   read -r
  # fi

  echo
  if taito::confirm "Change database master password"; then
    taito::print_title "CHANGE DATABASE MASTER PASSWORD"
    echo
    echo "Your database admin password was saved to Terraform state in plain text"
    echo "and you may want to change it. You most likely can change the password"
    echo "on cloud provider web console. Look for 'reset password', 'modify', or"
    echo "'users' in the database section."
    echo
    dashboard_link="$(taito -q ${taito_options:-} link-dashboard | grep -v '^\s*$' || :)"
    databases_link="$(taito -q ${taito_options:-} link-databases | grep -v '^\s*$' || :)"
    if [[ ${databases_link} ]] || [[ ${dashboard_link} ]]; then
      echo "Press enter to open the web console at:"
      echo "${databases_link:-$dashboard_link}"
      read -r
      taito::open_browser "${databases_link:-$dashboard_link}"
    fi
    echo "Press enter once the password has been changed"
    read -r
  fi

)

taito::call_next "${@}"
