#!/bin/bash -e

taito::confirm \
  "Replace placeholders with real values in taito_config.sh and terraform/*" || \
  taito::skip_to_next "${@}"

function replace_with_terraform_variable () {
  local placeholder=$1
  local variable=$2
  local type=$3
  local value

  if grep "${placeholder}" ../taito-config.sh; then
    echo "Determining ${variable}"
    if [[ ${type} == "array" ]]; then
      value=$(
        terraform output -json "${variable}" |
        jq -r 'map(.) |
        join(" ")' ||
        :
      )
    else
      value=$(terraform output "${variable}" || :)
    fi
    value=$(
      terraform output "${variable}" |
        grep -v "^\[\|^\]" |
        sed 's/  "\(.*\)",*/\1/g' |
        tr '\n' ' ' || :
    )
    if [[ ${value} ]]; then
      echo "${placeholder}"
      sed -i "s/$placeholder/$value/g" ../taito-config.sh
    fi
  fi
}

(
  cd terraform || exit 1

  # For AWS: determine hex string for region from database endpoint URL
  if [[ ${taito_provider:-} == "aws" ]]; then
    database=
    instance=
    if [[ ${postgres_default_name:-$postgres_default_instance} ]]; then
      database=postgres
      instance=${postgres_default_name:-$postgres_default_instance}
    elif [[ ${mysql_default_name:-$mysql_default_instance} ]]; then
      database=mysql
      instance=${mysql_default_name:-$mysql_default_instance}
    elif [[ ${postgres_instances:-} ]]; then # TODO: remove
      database=postgres
      instance=${postgres_instances:-}
    elif [[ ${mysql_instances:-} ]]; then # TODO: remove
      database=mysql
      instance=${mysql_instances:-}
    fi
    if [[ ${database} ]] && \
       [[ ${taito_provider_region_hexchars:-} == "TAITO_PROVIDER_REGION_HEXCHARS" ]]; then
      echo "Detemining hexadecimal string for region ${taito_provider_region:?}"
      hexchars=$(terraform output ${database}_instance_endpoint | \
        sed "s/$instance\\.\\(.*\\)\\.$taito_provider_region.*/\\1/" \
      )
      if [[ $hexchars ]]; then
        export taito_provider_region_hexchars=$hexchars
        echo "$hexchars"
      else
        echo "WARNING: Could not determine hexadecimal string"
      fi
      echo
    fi
  fi

  echo "Replacing hardcoded example values in taito_config and terraform/*"
  echo TAITO_PROVIDER_TAITO_ZONE_ID
  sed -i "s/TAITO_PROVIDER_TAITO_ZONE_ID/$(terraform output taito_provider_taito_zone_id || :)/g" taito-config.sh
  echo TAITO_ORGANIZATION
  sed -i "s/TAITO_ORGANIZATION/${taito_organization:?}/g" ./*.tf
  if [[ ${taito_provider_region_hexchars:-} ]]; then
    echo TAITO_PROVIDER_REGION_HEXCHARS
    sed -i "s/TAITO_PROVIDER_REGION_HEXCHARS/$taito_provider_region_hexchars/g" ./*.tf ../taito-config.sh
  fi
  echo TAITO_PROVIDER_REGION
  sed -i "s/TAITO_PROVIDER_REGION/$taito_provider_region/g" ./*.tf
  if [[ ${taito_state_bucket:-} ]]; then
    echo TAITO_STATE_BUCKET
    sed -i "s/TAITO_STATE_BUCKET/$taito_state_bucket/g" ./*.tf
  fi
  if [[ ${mysql_instances:-} ]]; then
    echo MYSQL_INSTANCES
    sed -i "s/MYSQL_INSTANCES/$mysql_instances/g" ./*.tf
  fi
  if [[ ${postgres_instances:-} ]]; then
    echo POSTGRES_INSTANCES
    sed -i "s/POSTGRES_INSTANCES/$postgres_instances/g" ./*.tf
  fi

  echo TAITO_ZONE_ABBR
  sed -i "s/TAITO_ZONE_ABBR/${taito_zone//-/}/g" ./*.tf
  echo TAITO_ZONE
  sed -i "s/TAITO_ZONE/$taito_zone/g" ./*.tf

  replace_with_terraform_variable TAITO_BASTION_PUBLIC_IP bastion_public_ip
  replace_with_terraform_variable POSTGRES_HOSTS postgres_hosts
  replace_with_terraform_variable MYSQL_HOSTS mysql_hosts

  echo
)

taito::call_next "${@}"
