#!/bin/bash -e

"${taito_cli_path}/plugins/kubectl/util/use-context"

echo -e "${H2s}Cluster${H2e}"
kubectl get componentstatus
echo
echo -e "${H2s}Nodes${H2e}"
kubectl describe nodes
echo
echo -e "${H2s}Top nodes${H2e}"
kubectl top nodes 2> /dev/null
echo
echo -e "${H2s}Ingresses${H2e}"
kubectl get ingress --all-namespaces
echo
echo -e "${H2s}Services${H2e}"
kubectl get services --all-namespaces
echo
echo -e "${H2s}Pods${H2e}"
kubectl get pods --all-namespaces
echo
echo -e "${H2s}Top pods${H2e}"
kubectl top pods --all-namespaces 2> /dev/null
echo
echo -e "${H2s}Load Balancer IPs${H2e}"
kubectl get services -o=custom-columns=LOAD_BALANCER_IP:.spec.loadBalancerIP,LOAD_BALANCER_AP:.status.loadBalancer.ingress[0].hostname \
  --no-headers --all-namespaces 2> /dev/null | \
  grep -v "<none>.*<none>" | \
  sed s/\\s*\<none\>\\s*//g
echo
echo "Your load balancer IP addresses are presented above. You should configure"
echo "DNS for them, and also set 'taito_default_domain' in taito-config.sh,"
echo "if you have not done so already. Example DNS entry:"
echo
echo "          A  *.mydomain.com  ->  123.123.123.123"
echo
echo "NOTE: If a hostname is shown instead of an IP, wait for a few minutes to"
echo "make sure that a static IP has been reserved for the hostname. Then resolve"
echo "the IP by running 'taito -- host HOSTNAME' and add a DNS entry for that IP."
echo
echo "TODO: For AWS use the lowest IP:s only (e.g. starting with 3.) as they seem"
echo "to be static."
echo

taito::call_next "${@}"
