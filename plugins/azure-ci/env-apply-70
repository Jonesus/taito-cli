#!/bin/bash -e
: "${taito_zone:?}"
: "${taito_provider_region:?}"
: "${taito_vc_repository:?}"
: "${taito_project:?}"
: "${taito_env:?}"

default=
if [[ ${taito_env} != "dev" ]]; then
  echo "NOTE: You most likely already have created the Azure DevOps project."
  default=no
fi

taito::confirm \
  "Create Azure DevOps project for ${taito_project} in ${taito_zone}" "${default}" || \
  taito::skip_to_next "${@}"

# TODO: Use Terraform to create the project (requires version control auth?)
echo
echo "Create a new Azure DevOps project with the following settings if one does not exist already."
echo
echo "- Project name: ${taito_project}"
echo "- Visibility: Private"
echo
echo "Then create a new pipeline for the project with the following settings if one does not exist already. Save it but do not run it yet."
echo
echo "- Source code location: ${taito_vc_provider:-GitHub}"
echo "- Repository: ${taito_vc_repository}"
echo "- Configuration: Existing Azure Pipelines YAML file (/azure-pipelines.yaml)"
echo
echo "Press enter to open Azure DevOps management"
read -r

taito::open_browser \
  "https://dev.azure.com/${taito_ci_organization:-$taito_organization}/"

echo "Press enter when ready"
read -r

taito::confirm "Show advanced CI/CD configuration tips" no || \
  taito::skip_to_next "${@}"
echo
echo "--------------------------------"
echo "OPTIONAL: Advanced configuration"
echo "--------------------------------"
echo
echo "a) Protect staging, canary, and production branches"
echo
echo "   Use branch protection features of the version control provider (${taito_vc_provider:-GitHub})"
echo "   to limit push access to staging (stag), canary (canary), and production"
echo "   (master) branches."
echo
echo "b) Deploy manually to staging, canary, and production environments"
echo
echo "   Modify current pipeline on DevOps web console:"
echo "   - Override YAML triggers: demo, dev, test, uat"
echo
echo "   Deploy manually with 'taito ci run:ENV' or create another pipeline with:"
echo "   - Override YAML triggers: -"
echo
echo "c) Phases: Always build automatically, and deploy manually"
echo
echo "   Modify current pipeline on DevOps web console:"
echo "   - Variables: TAITO_CI_PHASES=build"
echo
echo "   Deploy manually with 'taito ci run:ENV' or create another pipeline with:"
echo "   - Variables: TAITO_CI_PHASES=deploy,test,release"
echo "   - Override YAML triggers: -"
echo
echo "d) Execute CI/CD steps without Taito CLI"
echo
echo "   If you cannot use Taito CLI image on your CI/CD, see: https://taitounited.github.io/taito-cli/docs/06-continuous-integration-and-delivery#cicd-without-taito-cli"
echo

echo "Press enter when ready"
read -r

taito::call_next "${@}"
