#!/bin/bash -e
# shellcheck source=../lib/all.bash
. "${taito_plugin_path:?}/lib/all.bash"
: "${taito_command:?}"
: "${taito_env:?}"

# kubernetes database proxy

if [[ ${kubernetes_db_proxy_enabled:-} == "true" ]] && \
   [[ ${taito_requires_database_connection:-} == "true" ]]; then
  proxy_running=$(pgrep "kubectl")
  echo
  echo -e "${taito_command_context_prefix:-}${H1s}kubectl${H1e}"
  if [[ "${proxy_running}" == "" ]]; then
    echo "Starting db proxy"
    kubectl::use_context
    kubectl::db_proxy_start true
  else
    echo "Not Starting db proxy. It is already running."
  fi
fi

# kubernetes secrets
# TODO: tighter filter
fetch_secrets=
secret_filter=
if [[ $kubectl_secrets_retrieved != true ]]; then
  if [[ ${taito_command} == "build-prepare" ]] || \
     [[ ${taito_command} == "build-release" ]] || \
     [[ ${taito_command} == "artifact-prepare" ]] || \
     [[ ${taito_command} == "artifact-release" ]]; then
    fetch_secrets="true"
    secret_filter="git"
  elif [[ ${taito_commands_only_chain:-} == *"-db/"* ]] || \
       [[ ${taito_command} == "db-proxy" ]]; then
    fetch_secrets="true"
    secret_filter="db"
  elif [[ ${taito_command} == "test" ]] &&
       [[ "stag canary prod" != *"${taito_env}"* ]]; then
    fetch_secrets="true"
    secret_filter=
  fi
fi

if [[ ${fetch_secrets} ]]; then
  echo
  echo -e "${taito_command_context_prefix:-}${H1s}kubectl${H1e}"
  echo "Getting secrets from Kubernetes"
  kubectl::use_context
  kubectl::export_secrets true ${secret_filter}

  if [[ ${taito_command} == "test" ]] && [[ ${taito_mode} == "ci" ]]; then
    kubectl::save_proxy_secret_to_disk
  fi

  export kubectl_secrets_retrieved=true
fi

taito::call_next "${@}"
