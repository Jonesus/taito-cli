steps:
- id: install
  name: 'gcr.io/cloud-builders/npm'
  args: ['install']
- id: scan
  name: 'gcr.io/cloud-builders/npm'
  args: ['run', 'scan']
- id: secrets
  waitFor: ['-']
  name: 'gcr.io/cloud-builders/kubectl'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    echo "# Get gcloud credentials"
    if ! gcloud container clusters get-credentials "kube1" --zone "europe-west1-c"; then
      exit 1
    fi

    # Get github token from Kubernetes secrets
    kubectl --namespace "devops" get secret "ext.github.build" -o yaml | \
      grep SECRET | sed -e "s/^.*: //" | base64 --decode > github-token.tmp

- id: release-pre
  waitFor: ['secrets']
  name: 'gcr.io/cloud-builders/npm'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    github_token=$$(cat github-token.tmp)

    echo "# Cloning git repo to release directory as google container builder"
    echo "# workspace does not point to the original repository"
    if ! git clone "https://${github_token}@github.com/TaitoUnited/taito-cli.git" release; then
      exit 1
    fi
    cd release
    if ! git checkout master; then # TODO checkout $${commit_sha}, not master?
      exit 1
    fi
    if ! npm install; then
      exit 1
    fi

    echo "# Running semantic-release pre"
    if ! NPM_TOKEN=none GH_TOKEN=${github_token} npm run release-pre; then
      exit 1
    fi
    rm -f .npmrc

    echo "# Copying package.json with a new version number"
    cp package.json ..

- id: build
  name: 'gcr.io/cloud-builders/docker'
  env:
    - project_id=$PROJECT_ID
    - repo_name=$REPO_NAME
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    # Read version number that semantic-release wrote on the package.json
    tag=$$(grep "version" package.json | grep -o "[0-9].[0-9].[0-9]")
    docker build -t eu.gcr.io/$${project_id}/$${repo_name}:$${tag} .

- id: test-e2e
  name: 'gcr.io/cloud-builders/npm'
  args: ['run', 'test-e2e']
- id: release-post
  name: 'gcr.io/cloud-builders/npm'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    echo "# Running semantic-release post"
    github_token=$$(cat github-token.tmp)
    NPM_TOKEN=none GH_TOKEN=${github_token} npm run release-post

- id: push
  name: 'gcr.io/cloud-builders/docker'
  env:
    - project_id=$PROJECT_ID
    - repo_name=$REPO_NAME
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    # Read version number that semantic-release wrote on the package.json
    tag=$$(grep "version" package.json | grep -o "[0-9].[0-9].[0-9]")
    docker push eu.gcr.io/$${project_id}/$${repo_name}:$${tag}
